<html>
  <head>
    <meta name="GENERATOR" content="BLOCKNOTE.NET"/>
    <meta name="source"/>
    <meta name="source"/>
    <basefont face="Verdana" size="2"/>
    <meta name="generator" content="h-smile:richtext"/>
  </head>
<body>
  <div><strong><font size="6">RegExp object</font></strong></div>
  <div align="left">
    <table border="0" cellpadding="4" cellspacing="0" width="100%">
      <tr>
        <td colspan="2" valign="middle">
          <h2>Properties</h2></td></tr>
      <tr>
        <td width="117" bgcolor="#ffffff" align="right"><strong><em>length</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">- <em>integer</em>, number of matches after last <em>exec</em> or <em>match</em> methods calls.</td></tr>
      <tr>
        <td width="117" bgcolor="#ffffff" align="right"><strong><em>input</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">- <em>string</em>, last inspected string.</td></tr>
      <tr>
        <td width="117" bgcolor="#ffffff" align="right"><strong><em>source</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">- <em>string</em>, source code of the regular expression - string this RegExp was build from.</td></tr>
      <tr>
        <td width="117" bgcolor="#ffffff" align="right"><strong><em>index</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">- <em>integer</em>, character position where the first successful match begins in a searched string, read-only.</td></tr>
      <tr>
        <td width="117" bgcolor="#ffffff" align="right"><strong><em>lastIndex</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">- <em>integer</em>, character position where the next match begins in a searched string.</td></tr>
      <tr>
        <td width="117" bgcolor="#ffffff" align="right"><strong><em>[index]</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">- <em>string</em> | <em>undefined</em>, read-only, returns n-th matched fragment. <em>Index</em> is a zero based index, integer.</td></tr>
      <tr>
        <td colspan="2" valign="middle">
          <h2>Methods</h2></td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><em>this</em></td>
        <td bgcolor="#fffff0" valign="middle">
          <p><strong>(regular-expresion [,flags])</strong></p>
          <p>Used for intitalization of new instance of RegExp object. <em>regular-expresion</em> is a string - source of the regular expression. &nbsp;<em>flags</em> is an optional string and if provided may contain characters <em>'i' </em>for case insensitive search<em> </em>and/or <em>'g' -</em> for global search - to find all occurences of source in the input string. <br/>Use this constructor as: <font face="monospace">var re = new RegExp(...);</font></p></td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>test</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">
          <p><strong>(input)</strong> → &nbsp;<em>true</em> | <em>false</em></p>
          <p>Checks <em>input</em> string to see if a pattern exists within a string and returns <strong>true</strong> if so, and <strong>false</strong> otherwise.</p></td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>exec</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">
          <p><strong>(input)</strong> → <em>null</em> | <em>RegExp</em> object</p>
          <p>Returns this RegExp object with length and list of matches set if pattern exists in <em>input</em> string or <em>null</em> otherwise.</p></td></tr></table></div>
</body>
</html>