<html>
  <head>
    <title>TIScript - Date object</title>
    <meta name="generator" content="h-smile:richtext"/>
  </head>
<body>
  <h1>Function object</h1>
  <p>Script Function object.</p>
  <div align="left">
    <table border="0" cellpadding="2" cellspacing="2" width="100%">
      <tr>
        <td colspan="2">
          <h2>Properties</h2></td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>name</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">readonly, string. name of the function. For anonymous (lambda) functions it is undefined.</td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>fullName</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">readonly, string. Fully qualified name of the function, includes name of class or namespace. For anonymous (lambda) functions it is undefined.</td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>length</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">readonly, integer. Returns total number of declared parameters.</td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>optionals</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">readonly, integer. Returns number of optional parameters.</td></tr>
      <tr>
        <td colspan="2" valign="top">
          <h2>Methods</h2></td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><em>[this]</em></td>
        <td bgcolor="#fffff0" valign="middle">
          <p>([<em>arg1</em>:string [, <em>arg2</em>:string [, ... <em>argN</em>:string]],] <em>functionBody</em>:string)</p>
          <p>constructor, compiles the functionBody and creates function object of it. arg1... argN are names to be used by the function as formal argument names. Each must be a string that corresponds to a valid JavaScript identifier.</p></td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>call</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">
          <p>( thisObj: object [, p0:value, ... pN:value] ) : value</p>
          <p>Invokes the function in context of <em>this</em> set to thisObj</p></td></tr>
      <tr>
        <td bgcolor="#ffffff" valign="top" align="right"><strong><em>apply</em></strong></td>
        <td bgcolor="#fffff0" valign="middle">
          <p>( thisObj: object [,p0:value, ... pN:value] [, argv:array] ) : value</p>
          <p>Invokes the function in context of <em>this</em> set to thisObj. Parameters of the function call are compsed from list of parameters p0 ... pN and appended by members of <em>argv</em> array. Thus actual call will have following parameters list: p0, ..., pN, argv[0], ... argv[N].</p></td></tr></table></div>
</body>
</html>