# Project: tiscript
# Makefile for GCC/Linux


CPP  = g++
CC   = gcc

RES  =

BUILD = ./build

OBJ  = $(BUILD)/main.o $(BUILD)/frontend.o $(BUILD)/memory.o $(BUILD)/regerror.o $(BUILD)/regexp.o $(BUILD)/widechar.o $(BUILD)/wregexp.o $(BUILD)/btree.o $(BUILD)/database.o $(BUILD)/dybase.o $(BUILD)/file.o $(BUILD)/pagepool.o $(BUILD)/json_cvt.o $(BUILD)/cs_bytevector.o $(BUILD)/cs_cobject.o $(BUILD)/cs_datetime.o $(BUILD)/cs_debug.o $(BUILD)/cs_enter.o $(BUILD)/cs_env.o $(BUILD)/cs_error.o $(BUILD)/cs_fcn.o $(BUILD)/cs_file.o $(BUILD)/cs_float.o $(BUILD)/cs_hash.o $(BUILD)/cs_heap.o $(BUILD)/cs_instanceof.o $(BUILD)/cs_int.o $(BUILD)/cs_integer.o $(BUILD)/cs_math.o $(BUILD)/cs_method.o $(BUILD)/cs_object.o $(BUILD)/cs_parse.o $(BUILD)/cs_persistent.o $(BUILD)/cs_printf.o $(BUILD)/cs_rcode.o $(BUILD)/cs_regexp.o $(BUILD)/cs_storage.o $(BUILD)/cs_stream.o $(BUILD)/cs_string.o $(BUILD)/cs_symbol.o $(BUILD)/cs_system.o $(BUILD)/cs_type.o $(BUILD)/cs_vector.o $(BUILD)/cs_xml_parser.o $(BUILD)/sockio.o $(BUILD)/cs_com.o $(BUILD)/cs_eval.o $(BUILD)/cs_scn.o $(BUILD)/cs_wcode.o $(BUILD)/tl_base64.o $(BUILD)/tl_basic.o $(BUILD)/tl_datetime.o $(BUILD)/tl_string.o $(BUILD)/tl_url.o $(BUILD)/tl_ustring.o $(BUILD)/tl_util.o  $(BUILD)/snprintf.o $(BUILD)/regsub.o $(RES)

LIBS = -march=pentium-mmx

INCS =  -I"./tool"  -I"./include"  -I"./dybase/inc"  -I"./regexp" 

BIN  = tiscript.exe

CXXFLAGS = $(INCS)   -fno-access-control -fexceptions -march=pentium-mmx \
          -O3 -fno-strict-aliasing -Os

#NOTE: -fno-strict-aliasing is a MUST here. 
# From GCC 4.1 man: ... In particular, an object of one type is assumed never to reside at 
# the same address as an object of a different type, unless the types are almost the same. 
# that is clearly not the case in such type of applications.

RM = rm -f

.PHONY: all all-before all-after clean clean-custom

all: all-before tiscript.exe all-after

clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CPP) $(OBJ) -o "tiscript.exe" $(LIBS)

$(BUILD)/main.o: main.cpp
	$(CPP) -c main.cpp -o $(BUILD)/main.o $(CXXFLAGS)

$(BUILD)/frontend.o: regexp/frontend.c
	$(CPP) -c regexp/frontend.c -o $(BUILD)/frontend.o $(CXXFLAGS)

$(BUILD)/memory.o: regexp/memory.c
	$(CPP) -c regexp/memory.c -o $(BUILD)/memory.o $(CXXFLAGS)

$(BUILD)/regerror.o: regexp/regerror.c
	$(CPP) -c regexp/regerror.c -o $(BUILD)/regerror.o $(CXXFLAGS)

$(BUILD)/regexp.o: regexp/regexp.c
	$(CPP) -c regexp/regexp.c -o $(BUILD)/regexp.o $(CXXFLAGS)

$(BUILD)/widechar.o: regexp/widechar.c
	$(CPP) -c regexp/widechar.c -o $(BUILD)/widechar.o $(CXXFLAGS)

$(BUILD)/wregexp.o: regexp/wregexp.cpp
	$(CPP) -c regexp/wregexp.cpp -o $(BUILD)/wregexp.o $(CXXFLAGS)

$(BUILD)/btree.o: dybase/src/btree.cpp
	$(CPP) -c dybase/src/btree.cpp -o $(BUILD)/btree.o $(CXXFLAGS)

$(BUILD)/database.o: dybase/src/database.cpp
	$(CPP) -c dybase/src/database.cpp -o $(BUILD)/database.o $(CXXFLAGS)

$(BUILD)/dybase.o: dybase/src/dybase.cpp
	$(CPP) -c dybase/src/dybase.cpp -o $(BUILD)/dybase.o $(CXXFLAGS)

$(BUILD)/file.o: dybase/src/file.cpp
	$(CPP) -c dybase/src/file.cpp -o $(BUILD)/file.o $(CXXFLAGS)

$(BUILD)/pagepool.o: dybase/src/pagepool.cpp
	$(CPP) -c dybase/src/pagepool.cpp -o $(BUILD)/pagepool.o $(CXXFLAGS)

$(BUILD)/json_cvt.o: int/json_cvt.cpp
	$(CPP) -c int/json_cvt.cpp -o $(BUILD)/json_cvt.o $(CXXFLAGS)

$(BUILD)/cs_bytevector.o: int/cs_bytevector.cpp
	$(CPP) -c int/cs_bytevector.cpp -o $(BUILD)/cs_bytevector.o $(CXXFLAGS)

$(BUILD)/cs_cobject.o: int/cs_cobject.cpp
	$(CPP) -c int/cs_cobject.cpp -o $(BUILD)/cs_cobject.o $(CXXFLAGS)

$(BUILD)/cs_datetime.o: int/cs_datetime.cpp
	$(CPP) -c int/cs_datetime.cpp -o $(BUILD)/cs_datetime.o $(CXXFLAGS)

$(BUILD)/cs_debug.o: int/cs_debug.cpp
	$(CPP) -c int/cs_debug.cpp -o $(BUILD)/cs_debug.o $(CXXFLAGS)

$(BUILD)/cs_enter.o: int/cs_enter.cpp
	$(CPP) -c int/cs_enter.cpp -o $(BUILD)/cs_enter.o $(CXXFLAGS)

$(BUILD)/cs_env.o: int/cs_env.cpp
	$(CPP) -c int/cs_env.cpp -o $(BUILD)/cs_env.o $(CXXFLAGS)

$(BUILD)/cs_error.o: int/cs_error.cpp
	$(CPP) -c int/cs_error.cpp -o $(BUILD)/cs_error.o $(CXXFLAGS)

$(BUILD)/cs_fcn.o: int/cs_fcn.cpp
	$(CPP) -c int/cs_fcn.cpp -o $(BUILD)/cs_fcn.o $(CXXFLAGS)

$(BUILD)/cs_file.o: int/cs_file.cpp
	$(CPP) -c int/cs_file.cpp -o $(BUILD)/cs_file.o $(CXXFLAGS)

$(BUILD)/cs_float.o: int/cs_float.cpp
	$(CPP) -c int/cs_float.cpp -o $(BUILD)/cs_float.o $(CXXFLAGS)

$(BUILD)/cs_hash.o: int/cs_hash.cpp
	$(CPP) -c int/cs_hash.cpp -o $(BUILD)/cs_hash.o $(CXXFLAGS)

$(BUILD)/cs_heap.o: int/cs_heap.cpp
	$(CPP) -c int/cs_heap.cpp -o $(BUILD)/cs_heap.o $(CXXFLAGS)

$(BUILD)/cs_instanceof.o: int/cs_instanceof.cpp
	$(CPP) -c int/cs_instanceof.cpp -o $(BUILD)/cs_instanceof.o $(CXXFLAGS)

$(BUILD)/cs_int.o: int/cs_int.cpp
	$(CPP) -c int/cs_int.cpp -o $(BUILD)/cs_int.o $(CXXFLAGS)

$(BUILD)/cs_integer.o: int/cs_integer.cpp
	$(CPP) -c int/cs_integer.cpp -o $(BUILD)/cs_integer.o $(CXXFLAGS)

$(BUILD)/cs_math.o: int/cs_math.cpp
	$(CPP) -c int/cs_math.cpp -o $(BUILD)/cs_math.o $(CXXFLAGS)

$(BUILD)/cs_method.o: int/cs_method.cpp
	$(CPP) -c int/cs_method.cpp -o $(BUILD)/cs_method.o $(CXXFLAGS)

$(BUILD)/cs_object.o: int/cs_object.cpp
	$(CPP) -c int/cs_object.cpp -o $(BUILD)/cs_object.o $(CXXFLAGS)

$(BUILD)/cs_parse.o: int/cs_parse.cpp
	$(CPP) -c int/cs_parse.cpp -o $(BUILD)/cs_parse.o $(CXXFLAGS)

$(BUILD)/cs_persistent.o: int/cs_persistent.cpp
	$(CPP) -c int/cs_persistent.cpp -o $(BUILD)/cs_persistent.o $(CXXFLAGS)

$(BUILD)/cs_printf.o: int/cs_printf.cpp
	$(CPP) -c int/cs_printf.cpp -o $(BUILD)/cs_printf.o $(CXXFLAGS)

$(BUILD)/cs_rcode.o: int/cs_rcode.cpp
	$(CPP) -c int/cs_rcode.cpp -o $(BUILD)/cs_rcode.o $(CXXFLAGS)

$(BUILD)/cs_regexp.o: int/cs_regexp.cpp
	$(CPP) -c int/cs_regexp.cpp -o $(BUILD)/cs_regexp.o $(CXXFLAGS)

$(BUILD)/cs_storage.o: int/cs_storage.cpp
	$(CPP) -c int/cs_storage.cpp -o $(BUILD)/cs_storage.o $(CXXFLAGS)

$(BUILD)/cs_stream.o: int/cs_stream.cpp
	$(CPP) -c int/cs_stream.cpp -o $(BUILD)/cs_stream.o $(CXXFLAGS)

$(BUILD)/cs_string.o: int/cs_string.cpp
	$(CPP) -c int/cs_string.cpp -o $(BUILD)/cs_string.o $(CXXFLAGS)

$(BUILD)/cs_symbol.o: int/cs_symbol.cpp
	$(CPP) -c int/cs_symbol.cpp -o $(BUILD)/cs_symbol.o $(CXXFLAGS)

$(BUILD)/cs_system.o: int/cs_system.cpp
	$(CPP) -c int/cs_system.cpp -o $(BUILD)/cs_system.o $(CXXFLAGS)

$(BUILD)/cs_type.o: int/cs_type.cpp
	$(CPP) -c int/cs_type.cpp -o $(BUILD)/cs_type.o $(CXXFLAGS)

$(BUILD)/cs_vector.o: int/cs_vector.cpp
	$(CPP) -c int/cs_vector.cpp -o $(BUILD)/cs_vector.o $(CXXFLAGS)

$(BUILD)/cs_xml_parser.o: int/cs_xml_parser.cpp
	$(CPP) -c int/cs_xml_parser.cpp -o $(BUILD)/cs_xml_parser.o $(CXXFLAGS)

$(BUILD)/sockio.o: int/sockio/sockio.cpp
	$(CPP) -c int/sockio/sockio.cpp -o $(BUILD)/sockio.o $(CXXFLAGS)

$(BUILD)/cs_com.o: com/cs_com.cpp
	$(CPP) -c com/cs_com.cpp -o $(BUILD)/cs_com.o $(CXXFLAGS)

$(BUILD)/cs_eval.o: com/cs_eval.cpp
	$(CPP) -c com/cs_eval.cpp -o $(BUILD)/cs_eval.o $(CXXFLAGS)

$(BUILD)/cs_scn.o: com/cs_scn.cpp
	$(CPP) -c com/cs_scn.cpp -o $(BUILD)/cs_scn.o $(CXXFLAGS)

$(BUILD)/cs_wcode.o: com/cs_wcode.cpp
	$(CPP) -c com/cs_wcode.cpp -o $(BUILD)/cs_wcode.o $(CXXFLAGS)

$(BUILD)/tl_base64.o: tool/tl_base64.cpp
	$(CPP) -c tool/tl_base64.cpp -o $(BUILD)/tl_base64.o $(CXXFLAGS)

$(BUILD)/tl_basic.o: tool/tl_basic.cpp
	$(CPP) -c tool/tl_basic.cpp -o $(BUILD)/tl_basic.o $(CXXFLAGS)

$(BUILD)/tl_datetime.o: tool/tl_datetime.cpp
	$(CPP) -c tool/tl_datetime.cpp -o $(BUILD)/tl_datetime.o $(CXXFLAGS)

#$(BUILD)/tl_mm_file.o: tool/tl_mm_file.cpp
#	$(CPP) -c tool/tl_mm_file.cpp -o $(BUILD)/tl_mm_file.o $(CXXFLAGS)

$(BUILD)/tl_string.o: tool/tl_string.cpp
	$(CPP) -c tool/tl_string.cpp -o $(BUILD)/tl_string.o $(CXXFLAGS)

$(BUILD)/tl_url.o: tool/tl_url.cpp
	$(CPP) -c tool/tl_url.cpp -o $(BUILD)/tl_url.o $(CXXFLAGS)

$(BUILD)/tl_ustring.o: tool/tl_ustring.cpp
	$(CPP) -c tool/tl_ustring.cpp -o $(BUILD)/tl_ustring.o $(CXXFLAGS)

$(BUILD)/tl_util.o: tool/tl_util.cpp
	$(CPP) -c tool/tl_util.cpp -o $(BUILD)/tl_util.o $(CXXFLAGS)

$(BUILD)/snprintf.o: tool/snprintf.cpp
	$(CPP) -c tool/snprintf.cpp -o $(BUILD)/snprintf.o $(CXXFLAGS)

$(BUILD)/regsub.o: regexp/regsub.c
	$(CPP) -c regexp/regsub.c -o $(BUILD)/regsub.o $(CXXFLAGS)
